// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
// / await Firebase.initializeApp(
// /   options: DefaultFirebaseOptions.currentPlatform,
// / );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // String? appId = dotenv.env["firebaseAppId"];
  // String? firebaseWebKey = dotenv.env["firebaseWebKey"];
  // String? firebaseIosKey = dotenv.env["firebaseIosKey"];
  // String? firebaseMacKey = dotenv.env["firebaseMacKey"];

  static FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.env["firebaseWebKey"]!,
    appId: dotenv.env["firebaseAppId"]!,
    messagingSenderId: '552170877326',
    projectId: 'traveler-town',
    authDomain: 'traveler-town.firebaseapp.com',
    storageBucket: 'traveler-town.appspot.com',
    measurementId: 'G-K99TGJ3V51',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.env["firebaseIosKey"]!,
    appId: dotenv.env["firebaseAppId"]!,
    messagingSenderId: '552170877326',
    projectId: 'traveler-town',
    storageBucket: 'traveler-town.appspot.com',
    iosBundleId: 'com.example.travelerTown',
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: dotenv.env["firebaseMacKey"]!,
    appId: dotenv.env["firebaseAppId"]!,
    messagingSenderId: '552170877326',
    projectId: 'traveler-town',
    storageBucket: 'traveler-town.appspot.com',
    iosBundleId: 'com.example.travelerTown',
  );
}
